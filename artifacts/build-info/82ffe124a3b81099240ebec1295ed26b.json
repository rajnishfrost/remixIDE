{
	"id": "82ffe124a3b81099240ebec1295ed26b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"fallbackAndReceive.sol": {
				"content": "\n\ncontract fallbackAndReceive{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"fallbackAndReceive.sol": {
				"fallbackAndReceive": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"fallbackAndReceive.sol\":2:37  contract fallbackAndReceive{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"fallbackAndReceive.sol\":2:37  contract fallbackAndReceive{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209e2ca25e64024545883719cd05d0bddfa68a85be50be58a3103ecffe3690794064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212209e2ca25e64024545883719cd05d0bddfa68a85be50be58a3103ecffe3690794064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x2C LOG2 0x5E PUSH5 0x245458837 NOT 0xCD SDIV 0xD0 0xBD 0xDF 0xA6 DUP11 DUP6 0xBE POP 0xBE PC LOG3 LT RETURNDATACOPY 0xCF INVALID CALLDATASIZE SWAP1 PUSH26 0x4064736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "2:35:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212209e2ca25e64024545883719cd05d0bddfa68a85be50be58a3103ecffe3690794064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x2C LOG2 0x5E PUSH5 0x245458837 NOT 0xCD SDIV 0xD0 0xBD 0xDF 0xA6 DUP11 DUP6 0xBE POP 0xBE PC LOG3 LT RETURNDATACOPY 0xCF INVALID CALLDATASIZE SWAP1 PUSH26 0x4064736F6C634300080700330000000000000000000000000000 ",
							"sourceMap": "2:35:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2,
									"end": 37,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2,
									"end": 37,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e2ca25e64024545883719cd05d0bddfa68a85be50be58a3103ecffe3690794064736f6c63430008070033",
									".code": [
										{
											"begin": 2,
											"end": 37,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2,
											"end": 37,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2,
											"end": 37,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2,
											"end": 37,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2,
											"end": 37,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2,
											"end": 37,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"fallbackAndReceive.sol\":\"fallbackAndReceive\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"fallbackAndReceive.sol\":{\"keccak256\":\"0xf4e0fc45b21cf47eed0c322cf4c50151622edee5908d1eccb8aad51f6509b795\",\"urls\":[\"bzz-raw://cf0c58e79df9a0c02115b2e5169e1b90662811ea5e69ce4b1723d9b01c0f1eca\",\"dweb:/ipfs/QmV3vuxBmoWj8UaAZ9KYoRkoSeKZvofHU25BxS4yDhafx8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> fallbackAndReceive.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "fallbackAndReceive.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"\n--> fallbackAndReceive.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.7;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "fallbackAndReceive.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"fallbackAndReceive.sol": {
				"ast": {
					"absolutePath": "fallbackAndReceive.sol",
					"exportedSymbols": {
						"fallbackAndReceive": [
							1
						]
					},
					"id": 2,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1,
							"linearizedBaseContracts": [
								1
							],
							"name": "fallbackAndReceive",
							"nameLocation": "11:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2,
							"src": "2:35:0",
							"usedErrors": []
						}
					],
					"src": "2:35:0"
				},
				"id": 0
			}
		}
	}
}